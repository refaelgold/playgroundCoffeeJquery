// Generated by CoffeeScript 1.7.1
(function() {
  (function($) {
    $.fn.slider = function(options) {
      var defaults, settings;
      defaults = {
        duration: 1000,
        animationDelay: 5000
      };
      settings = $.extend({}, defaults, options);
      return this.each(function() {
        var $allButtons, $buttons, $index, $slider, $sliderItems, $sliderList, animateSlider, animateSliderToMargin, automaticSlide, currentIndex, endMargin, getLeftMargin, imageWidth, isAtBeginning, isAtEnd, isPaused, resetTimer, timer, totalImages, triggerSlider, updateIndex;
        $slider = $(this);
        $sliderList = $slider.children("ul");
        $sliderItems = $sliderList.children("li");
        $allButtons = $slider.find(".button");
        $buttons = {
          forward: $allButtons.filter(".forward"),
          back: $allButtons.filter(".back")
        };
        $index = $(".index");
        imageWidth = $sliderItems.first().children("img").width();
        endMargin = -(($sliderItems.length - 1) * imageWidth);
        totalImages = $sliderItems.length;
        currentIndex = 1;
        isPaused = false;
        animateSlider = function(direction, callback) {
          $sliderList.stop(true, true).animate({
            "margin-left": direction + "=" + imageWidth
          }, settings.duration, function() {
            var increment;
            increment = (direction === "+" ? -1 : 1);
            updateIndex(currentIndex + increment);
            if (callback && typeof callback === "function") {
              callback();
            }
          });
        };
        animateSliderToMargin = function(margin, callback) {
          $sliderList.stop(true, true).animate({
            "margin-left": margin
          }, settings.duration, callback);
        };
        getLeftMargin = function() {
          return parseInt($sliderList.css("margin-left"), 10);
        };
        isAtBeginning = function() {
          return getLeftMargin() >= 0;
        };
        isAtEnd = function() {
          return getLeftMargin() <= endMargin;
        };
        updateIndex = function(newIndex) {
          currentIndex = newIndex;
          $index.text(currentIndex);
        };
        triggerSlider = function(direction, callback) {
          var isBackButton;
          isBackButton = direction === "+";
          if (!isBackButton && isAtEnd()) {
            animateSliderToMargin(0, callback);
            updateIndex(1);
          } else if (isBackButton && isAtBeginning()) {
            animateSliderToMargin(endMargin, callback);
            updateIndex(totalImages);
          } else {
            animateSlider(direction, callback);
          }
        };
        automaticSlide = function() {
          var timer;
          timer = setTimeout(function() {
            triggerSlider("-", function() {
              automaticSlide();
            });
          }, settings.animationDelay);
        };
        timer = setTimeout(automaticSlide, settings.animationDelay);
        resetTimer = function() {
          if (timer) {
            clearTimeout(timer);
          }
          timer = setTimeout(automaticSlide, 30000);
        };
        $allButtons.on("click", function(event) {
          var isBackButton;
          resetTimer();
          isBackButton = $(this).hasClass("back");
          triggerSlider((isBackButton ? "+" : "-"));
          event.preventDefault();
        });
        $(document.documentElement).on("keyup", function(event) {
          if (event.keyCode === 37) {
            resetTimer();
            triggerSlider("+");
          } else if (event.keyCode === 39) {
            resetTimer();
            triggerSlider("-");
          }
        });
      });
    };
  })(jQuery);

  $(function() {
    $(".slider").slider({
      duration: 1000,
      animationDelay: 10000
    });
  });

}).call(this);

//# sourceMappingURL=chp011.map
